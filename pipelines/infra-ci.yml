parameters:
  - name: environment
    type: string
    default: dev
    values:
      - dev
      - test
      - prod

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates

pool:
  vmImage: ubuntu-latest

variables:
  - template: ./variables/${{ parameters.environment }}.yml

stages:
  - stage: Validate
    displayName: Validate Terraform
    jobs:
      - job: Validate
        displayName: Validate Terraform
        steps:
          - script: |
              brew install terragrunt
              brew install tflint
              brew install checkov
            displayName: Install dependencies
          - template: steps/terraform_format.yml@templates
          - template: steps/terragrunt_hclfmt.yml@templates
          - template: steps/terraform_tflint.yml@templates
            parameters:
              moduleDirectories:
                - $(Build.Repository.LocalPath)/app/modules
                - $(Build.Repository.LocalPath)/app/stacks
          - template: steps/run_checkov.yml@templates
          - template: steps/terragrunt_validate.yml@templates
            parameters:
              serviceConnection: Terraform Dev
              subscriptionId: $(SUBSCRIPTION_ID)
              workingDirectory: $(Build.Repository.LocalPath)/app/stacks
          - script: |
              git tag -l | xargs git tag -d
              git -c http.extraheader="AUTHORIZATION: Basic token:$(System.AccessToken)" fetch --tags

              DATE=$(date +%Y-%m-%d)
              TAG_NAME="infra_environments_$(Build.BuildNumber)"
              TAG_MESSAGE="${DATE}"

              EXISTING_TAGS=$(git -c http.extraheader="AUTHORIZATION: Basic token:$(System.AccessToken)" tag -l --points-at HEAD)
              echo "$EXISTING_TAGS" | while read tag ; do
                if [[ $tag == *"infra_environments"* ]]; then
                  echo "##vso[build.addbuildtag]$tag"
                  echo "Tag already set - skipping"
                  exit 2
                fi
              done

              echo "##vso[build.addbuildtag]$TAG_NAME"

              git config --global user.name 'Azure DevOps'
              git config --global user.email 'azure-devops@planninginspectorate.gov.uk'
              git tag -a "${TAG_NAME}" -m "${TAG_MESSAGE}"
              git -c http.extraheader="AUTHORIZATION: Basic token:$(System.AccessToken)" push origin "${TAG_NAME}"
            condition: or(contains(variables['Build.SourceBranch'], 'refs/tags/'), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
            displayName: Git Tag
