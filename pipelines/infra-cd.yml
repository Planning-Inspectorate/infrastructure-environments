parameters:
  - name: region
    displayName: Region
    type: string
    default: all
    values:
      - all
      - global
      - uk-south
      - uk-west
  - name: stack
    displayName: Stack
    type: string
    default: all
    values:
      - all
      - common
      - appeals-service
      - applications-service
      - back-office
      - front-door
      - front-door-https
  - name: DRDeployment
    displayName: Disaster Recovery Deployment?
    type: boolean
    default: false

trigger: none

pr: none

resources:
  pipelines:
    - pipeline: infrastructure-environments-ci
      source: infrastructure-environments CI
      trigger:
        branches:
          include:
            - main
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates
      ref: refs/tags/release/3.1.0

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    deploymentStages:
      - name: Terraform Plan
        deploymentJobs:
          - name: Plan
            isDeployment: false
            steps:
              - script: |
                  echo "##vso[build.addbuildtag]stack=${{ parameters.stack }}"
                  echo "##vso[build.addbuildtag]region=${{ parameters.region }}"
                displayName: Add stack & region build tag
              - ${{ if eq(parameters.stack, 'all') }}:
                - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_plan_all.yml@templates
                  parameters:
                    artifactName: terraform-config-files
                    environmentVariables:
                      ENV: $(ENVIRONMENT)
                      TF_ENV_odw_subscription_id: ${ODW_SUBSCRIPTION_ID}
                      TF_ENV_odw_data_lake_storage_account_name: ${ODW_DATA_LAKE_STORAGE_ACCOUNT_NAME}
                      TF_ENV_odw_resource_group_name: ${ODW_RESOURCE_GROUP_NAME}
                      TF_ENV_odw_synapse_sql_pool_host: ${ODW_SYNAPSE_SQL_POOL_HOST}
                      ${{ if eq(parameters.DRDeployment, 'true') }}:
                        DR_DEPLOYMENT: true
                    subscriptionId: $(SUBSCRIPTION_ID)
                    ${{ if eq(parameters.region, 'all') }}:
                      workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks
                    ${{ else }}:
                      workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks/${{ parameters.region }}
              - ${{ else }}:
                - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_plan.yml@templates
                  parameters:
                    artifactName: terraform-plan-$(ENVIRONMENT)
                    environmentVariables:
                      ENV: $(ENVIRONMENT)
                      TF_ENV_odw_subscription_id: ${ODW_SUBSCRIPTION_ID}
                      TF_ENV_odw_data_lake_storage_account_name: ${ODW_DATA_LAKE_STORAGE_ACCOUNT_NAME}
                      TF_ENV_odw_resource_group_name: ${ODW_RESOURCE_GROUP_NAME}
                      TF_ENV_odw_synapse_sql_pool_host: ${ODW_SYNAPSE_SQL_POOL_HOST}
                      ${{ if eq(parameters.DRDeployment, 'true') }}:
                        DR_DEPLOYMENT: true
                    region: ${{ parameters.region }}
                    stack: ${{ parameters.stack }}
                    subscriptionId: $(SUBSCRIPTION_ID)
                    workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks/${{ parameters.region }}/${{ parameters.stack }}
      - name: Terraform Apply
        dependsOn:
          - Terraform Plan
        deploymentJobs:
          - name: Apply
            steps:
              - ${{ if eq(parameters.stack, 'all') }}:
                - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_apply_all.yml@templates
                  parameters:
                    artifactname: terraform-config-files
                    environmentVariables:
                      ENV: $(ENVIRONMENT)
                      TF_ENV_odw_subscription_id: ${ODW_SUBSCRIPTION_ID}
                      TF_ENV_odw_data_lake_storage_account_name: ${ODW_DATA_LAKE_STORAGE_ACCOUNT_NAME}
                      TF_ENV_odw_resource_group_name: ${ODW_RESOURCE_GROUP_NAME}
                      TF_ENV_odw_synapse_sql_pool_host: ${ODW_SYNAPSE_SQL_POOL_HOST}
                      ${{ if eq(parameters.DRDeployment, 'true') }}:
                        DR_DEPLOYMENT: true
                    subscriptionId: $(SUBSCRIPTION_ID)
                    ${{ if eq(parameters.region, 'all') }}:
                      workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks
                    ${{ else }}:
                      workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks/${{ parameters.region }}
              - ${{ else }}:
                - template: ${{variables['Build.SourcesDirectory']}}/steps/terraform_apply.yml@templates
                  parameters:
                    artifactName: terraform-plan-$(ENVIRONMENT)
                    subscriptionId: $(SUBSCRIPTION_ID)
