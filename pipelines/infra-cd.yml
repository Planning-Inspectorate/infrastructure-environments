parameters:
  - name: environment
    type: string
    default: Dev
    values:
      - Dev
      - Test
      - Production

trigger:
  batch: true
  branches:
    include:
    - main

pr: none

resources:
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates

pool:
  vmImage: ubuntu-latest

variables:
  - template: ./variables/${{ lower(parameters.environment) }}.yml

stages:
  - stage: Plan
    displayName: Terraform Plan ${{ parameters.environment }}
    jobs:
      - job: Plan
        displayName: Terraform Plan
        steps:
          - script: |
              brew install terragrunt
            displayName: Install dependencies
          - task: AzureCLI@2
            displayName: Azure Authentication
            inputs:
              scriptType: bash
              scriptLocation: inlineScript
              azureSubscription: $(ADO_SERVICE_CONNECTION)
              addSpnToEnvironment: true
              inlineScript: |
                echo "##vso[task.setvariable variable=azureClientId]$servicePrincipalId"
                echo "##vso[task.setvariable variable=azureClientSecret]$servicePrincipalKey"
                echo "##vso[task.setvariable variable=azureTenantId]$tenantId"
          - script: |
              terragrunt run-all plan --terragrunt-include-external-dependencies
            displayName: Terragrunt Plan
            env:
              ARM_CLIENT_ID: $(azureClientId)
              ARM_CLIENT_SECRET: $(azureClientSecret)
              ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
              ARM_TENANT_ID: $(azureTenantId)
              ENV: $(ENV)
              TERRAGRUNT_WORKING_DIR: $(Build.Repository.LocalPath)/app/stacks
              TF_INPUT: false
          - task: CopyFiles@2
            displayName: Copy sources to artifact
            inputs:
              SourceFolder: $(Build.Repository.LocalPath)
              Contents: |
                */**
                !.git
                !**/.terraform/**
                !**/.terragrunt_cache/**
                !**/.terraform.lock.hcl
                !.gitignore
                !.pre-commit-config.yaml
                !.tflint.hcl
                !LICENSE
                !README.md
              TargetFolder: $(Build.ArtifactStagingDirectory)
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: infrastructure-environments
            displayName: Publish sources
  - stage: Apply
    dependsOn: Plan
    displayName: Terraform Apply ${{ parameters.environment }}
    jobs:
      - deployment: Apply
        displayName: Terraform Apply
        environment: ${{ parameters.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - script: |
                    brew install terragrunt
                  displayName: Install dependencies
                - task: AzureCLI@2
                  displayName: Azure Authentication
                  inputs:
                    scriptType: bash
                    scriptLocation: inlineScript
                    azureSubscription: $(ADO_SERVICE_CONNECTION)
                    addSpnToEnvironment: true
                    inlineScript: |
                      echo "##vso[task.setvariable variable=azureClientId]$servicePrincipalId"
                      echo "##vso[task.setvariable variable=azureClientSecret]$servicePrincipalKey"
                      echo "##vso[task.setvariable variable=azureTenantId]$tenantId"
                - script: |
                    terragrunt run-all apply --terragrunt-include-external-dependencies
                  displayName: Terragrunt Plan
                  env:
                    ARM_CLIENT_ID: $(azureClientId)
                    ARM_CLIENT_SECRET: $(azureClientSecret)
                    ARM_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
                    ARM_TENANT_ID: $(azureTenantId)
                    ENV: $(ENV)
                    TERRAGRUNT_WORKING_DIR: $(Pipeline.Workspace)/infrastructure-environments/app/stacks
                    TF_INPUT: false
