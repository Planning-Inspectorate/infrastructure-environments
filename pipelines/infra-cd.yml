parameters:
  - name: environments
    displayName: Environments
    type: object
    default:
      - name: Dev
      - name: Test
        dependsOn:
          - Dev
      - name: Prod
        dependsOn:
          - Test
  - name: stack
    displayName: Stack
    type: string
    default: all
    values:
      - all
      - common
      - appeals-service
      - applications-service

trigger: none

pr: none

resources:
  pipelines:
    - pipeline: infrastructure-environments-ci
      source: infrastructure-environments CI
      trigger:
        branches:
          include:
            - main
  repositories:
    - repository: templates
      type: github
      endpoint: Planning-Inspectorate
      name: Planning-Inspectorate/common-pipeline-templates

extends:
  template: stages/wrapper_cd.yml@templates
  parameters:
    deploymentStages:
      - name: Terraform Plan
        authType: terraform
        deploymentSteps:
          - script: |
              echo "##vso[build.addbuildtag]stack=${{ parameters.stack }}"
            displayName: Add stack build tag
          - ${{ if eq(parameters.stack, 'all') }}:
            - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_plan_all.yml@templates
              parameters:
                environmentVariables:
                  ENV: $(ENVIRONMENT)
                subscriptionId: $(SUBSCRIPTION_ID)
                workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks
          - ${{ else }}:
            - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_plan.yml@templates
              parameters:
                artifactName: terraform-plan-$(ENVIRONMENT)
                environmentVariables:
                  ENV: $(ENVIRONMENT)
                stack: ${{ parameters.stack }}
                subscriptionId: $(SUBSCRIPTION_ID)
                workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks/${{ parameters.stack }}
        isDeployment: false
      - name: Terraform Apply
        authType: terraform
        dependsOn:
          - Terraform Plan
        deploymentSteps:
          - ${{ if eq(parameters.stack, 'all') }}:
            - template: ${{variables['Build.SourcesDirectory']}}/steps/terragrunt_apply_all.yml@templates
              parameters:
                environmentVariables:
                  ENV: $(ENVIRONMENT)
                subscriptionId: $(SUBSCRIPTION_ID)
                workingDirectory: $(System.DefaultWorkingDirectory)/app/stacks
          - ${{ else }}:
            - template: ${{variables['Build.SourcesDirectory']}}/steps/terraform_apply.yml@templates
              parameters:
                artifactName: terraform-plan-$(ENVIRONMENT)
                subscriptionId: $(SUBSCRIPTION_ID)
    ${{ if in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI', 'ResourceTrigger') }}:
      environments:
        - name: Dev
    ${{ else }}:
      environments: ${{ parameters.environments }}
    project: infrastructure
